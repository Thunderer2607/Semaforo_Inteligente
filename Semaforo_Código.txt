//Nicolas Campos Marceniuk/Thunderer
#include <SoftwareSerial.h>

SoftwareSerial SerialBT(52,53);

int v1, v2, v3, v4;
int a1, a2, a3, a4;
int p1, p2, p3, p4 = 0;
int s[]{1,2,3,4,5,6, 7, 8, 9, 10, 11, 12, 13, 14};
int pp, cp, pe, ps, t;
int bt;
  
void setup(){
  
  pp = 500;//pp: antes de executar outro bloco
  cp = 4000;//cp: carros tem 4 segundo para passar
  pe = 5000;//pe: pedestres esperam 5 segundos antes de atravessar
  ps = 5000 / 4;//ps: pedestres tem 5 segundos para passar
  t = 200;//Diatancia do sensor
  
  //aa: amarelo fica por 2 segundo
  
  //bloco 1/2(repetição padrao do semaforo
  //bloco 3/4(rua com carros e outra não)
  //bloco 5/6(pedestre para atravessar)
 
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);

  pinMode(12, INPUT);
  pinMode(13, INPUT);

  pinMode(A0, INPUT);
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);
  
  Serial.begin(9600);
  SerialBT.begin(9600);

}

void loop(){

//v1
  digitalWrite(8, HIGH);
	delay(5);
  digitalWrite(8, LOW);
  
  a1 = pulseIn(A0, HIGH);
  v1 = a1 * 0.017;
  
  Serial.print(v1);
  Serial.println(": v1");
  	delay(10);
  
//v2
  digitalWrite(9, HIGH);
	delay(5);
  digitalWrite(9, LOW);
  
  a2 = pulseIn(A1, HIGH);
  v2 = a2 * 0.017;
  
  Serial.print(v2);
  Serial.println(": v2");
  	delay(10);
  
//v3
  digitalWrite(26, HIGH);
	delay(5);
  digitalWrite(26, LOW);
  
  a3 = pulseIn(A2, HIGH);
  v3 = a3 * 0.017;
  
  Serial.print(v3);
  Serial.println(": v3");
  	delay(5);
  
//v4
  digitalWrite(32, HIGH);
	delay(5);
  digitalWrite(32, LOW);
  
  a4 = pulseIn(A3, HIGH);
  v4 = a4 * 0.017;
  
  Serial.print(v4);
  Serial.println(": v4");
  	delay(10);

//--------------------//--------------------//
  
//P1
  p1 = digitalRead(12);
  Serial.print(p1);
  Serial.println(": p1");
  	delay(10);

//P2
  p2 = digitalRead(13);
  Serial.print(p2);
  Serial.println(": p2");
  	delay(10);
  
//P3
   p3 = digitalRead(24);
  Serial.print(p3);
  Serial.println(": p3");
  	delay(10);
  
//P4
   p4 = digitalRead(30);
  Serial.print(p4);
  Serial.println(": p4");
  	delay(10);
  
//--------------------//--------------------//

//BlueTooth
  if (SerialBT.available()){
    bt = SerialBT.read();}
  
//--------------------//--------------------//
  
//inicio
//BLOCO5: pedestre em p1(fecha rua 1 libera rua 2)
  if (p1 == 1 & p2 == 0){
    
    	Serial.println("bloco5");
      	Serial.print("BT = ");
      		bt = s[4];
      	Serial.println(bt);
      	Serial.println("//--------------------//--------------------//");
    
    delay(pe);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
    
    tone(10, 1600, 200);
  digitalWrite(5, HIGH);
  digitalWrite(4, HIGH);
      delay(ps);
    tone(10, 1200, 200);
        delay(ps);
    tone(10, 800, 200);
      delay(ps);
    tone(10, 400, 200);
      delay(ps);
    tone(10, 200, 200);
      delay(5);
    tone(10, 200, 200);}
  
//BLOCO6: pedestre em p2(fecha rua 2 libera rua 1)
  else if(p1 == 0 & p2 == 1){
    
      	Serial.println("bloco6");
    		bt = s[5];
      	Serial.print("BT = ");
      	Serial.println(bt);
      	Serial.println("//--------------------//--------------------//");
    
    
  delay(pe);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, LOW);
  digitalWrite(6, LOW);
   
    tone(11, 1500, 200);
  digitalWrite(2, HIGH);
  digitalWrite(7, HIGH);
      delay(ps);
    tone(11, 1200, 200);
        delay(ps);
    tone(11, 800, 200);
      delay(ps);
    tone(11, 400, 200);
      delay(ps);
   tone(11, 200, 200);
      delay(5);
   tone(11, 200, 200);}
   
//BLOCO7: pedestre em p1 e p2
  else if(p1 == 1 & p2 == 1){
    
      	Serial.println("Bloco7");
      		bt = s[6];
      	Serial.print("BT = ");
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
      
    	delay(pe);
  digitalWrite(2,LOW);
  digitalWrite(3,LOW);
  digitalWrite(5,LOW);
  digitalWrite(6,LOW);
  
    tone(11, 1500, 200);
  tone(10, 1500, 200);
  digitalWrite(4,HIGH);
  digitalWrite(7,HIGH);
        delay(ps);
    tone(11, 1200, 200);
  tone(10, 1200, 200);
        delay(ps);
    tone(11, 800, 200);
  tone(10, 800, 200);
        delay(ps);
    tone(11, 400, 200);
  tone(10, 400, 200);
        delay(ps);
    tone(11, 200, 200);
        delay(5);
    tone(11, 200, 200);}
  
//BLOCO1: funcionamento padrão do semaforo(carros nos 2 lados do cruzamento)
  else if(v1 < t & v2 < t) {
    
    	Serial.println("bloco1");
    	Serial.print("BT = ");
      		bt = s[0];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(4,LOW);//fase 1
    digitalWrite(6,LOW);
    digitalWrite(7,HIGH);
    digitalWrite(2,HIGH);
      delay(cp);
  
    digitalWrite(2,LOW);//fase2
    digitalWrite(3,HIGH);
      delay(2000);
  
    digitalWrite(3,LOW);//fase3
    digitalWrite(7,LOW);
    digitalWrite(4,HIGH);
    digitalWrite(5,HIGH);
      delay(cp);
  
  digitalWrite(6,HIGH);//fase 4
    digitalWrite(5,LOW);
      delay(2000);}

//BLOCO2: funcionamento padrão do semaforo(nenhum carro)
  else if(v1 > t & v2 > t) {
    
    	Serial.println("bloco2");
    	Serial.print("BT = ");
      		bt = s[1];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(4,LOW);//fase 1
    digitalWrite(6,LOW);
    digitalWrite(7,HIGH);
    digitalWrite(2,HIGH);
      delay(cp);
  
    digitalWrite(2,LOW);//fase2
    digitalWrite(3,HIGH);
      delay(2000);
  
    digitalWrite(3,LOW);//fase3
    digitalWrite(7,LOW);
    digitalWrite(4,HIGH);
    digitalWrite(5,HIGH);
      delay(cp);
  
  digitalWrite(6,HIGH);//fase 4
    digitalWrite(5,LOW);
      delay(2000); }
  
//BLOCO3: v1 maior que v2(carro na rua 1 e rua 2 vazia)
  else if(v1 < t & v2 > t){
    
    	Serial.println("bloco3");
    	Serial.print("BT = ");
      		bt = s[2];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(3, LOW);
    digitalWrite(4, LOW);
    digitalWrite(5, LOW);
    digitalWrite(6, LOW);
    
    digitalWrite(2, HIGH);
    digitalWrite(7, HIGH);
      delay(pp);}
  
//BLOCO4: v2 maior que v1(carro na rua 2 e rua 1 vazia)
  else if(v1 > t & v2 < t){
    
    	Serial.println("bloco4");
    	Serial.print("BT = ");
      		bt = s[3];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(2, LOW);
    digitalWrite(3, LOW);
    digitalWrite(6, LOW);
    digitalWrite(7, LOW);
    
    digitalWrite(5, HIGH);
    digitalWrite(4, HIGH);
      delay(pp);}

//--------------------//--------------------//
  
//inicio PT2
//BLOCO5: pedestre em p1(fecha rua 1 libera rua 2)
  if (p3 == 1 & p4 == 0){
    
    	Serial.println("bloco5");
    	Serial.print("BT = ");
      		bt = s[11];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    delay(pe);
  digitalWrite(25, LOW);
  digitalWrite(27, LOW);
  digitalWrite(29, LOW);
  digitalWrite(31, LOW);
    
    tone(22, 1600, 200);
  digitalWrite(33, HIGH);
  digitalWrite(23, HIGH);
    	delay(ps);
    tone(22, 1200, 200);
        delay(ps);
    tone(22, 800, 200);
    	delay(ps);
    tone(22, 400, 200);
    	delay(ps);
    tone(22, 200, 200);}
  
//BLOCO6: pedestre em p2(fecha rua 2 libera rua 1)
  else if(p3 == 0 & p4 == 1){
    
    	Serial.println("bloco6");
    	Serial.print("BT = ");
      		bt = s[12];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
	delay(pe);
  digitalWrite(31, LOW);
  digitalWrite(33, LOW);
  digitalWrite(25, LOW);
  digitalWrite(23, LOW);
   
  	tone(28, 1500, 200);
  digitalWrite(29, HIGH);
  digitalWrite(27, HIGH);
  		delay(ps);
    tone(28, 1200, 200);
        delay(ps);
    tone(28, 800, 200);
    	delay(ps);
    tone(28, 400, 200);
    	delay(ps);
    tone(28, 200, 200);}
  
//BLOCO7: pedestre em p1 e p2
  else if(p3 == 1 & p4 == 1){
    
    	Serial.println("bloco7");
    	Serial.print("BT = ");
      		bt = s[13];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
      delay(pe);
  digitalWrite(25,LOW);
  digitalWrite(27,LOW);
  digitalWrite(31,LOW);
  digitalWrite(33,LOW);
  
  	tone(28, 1500, 200);
	tone(22, 1500, 200);
  digitalWrite(23,HIGH);
  digitalWrite(29,HIGH);
        delay(ps);
    tone(28, 1200, 200);
	tone(22, 1200, 200);
      	delay(ps);
    tone(28, 800, 200);
	tone(22, 800, 200);
      	delay(ps);
    tone(28, 400, 200);
	tone(22, 400, 200);
      	delay(ps);
    tone(28, 200, 200);
	tone(22, 200, 200);}
  
//BLOCO1: funcionamento padrão do semaforo(carros nos 2 lados do cruzamento)
  else if(v3 < t & v4 < t) {
    
		Serial.println("bloco1");
    	Serial.print("BT = ");
      		bt = s[7];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
  	digitalWrite(23,LOW);//fase 1
  	digitalWrite(31,LOW);
  	digitalWrite(29,HIGH);
  	digitalWrite(27,HIGH);
  		delay(cp);
  
  	digitalWrite(27,LOW);//fase2
  	digitalWrite(25,HIGH);
  		delay(2000);
  
  	digitalWrite(25,LOW);//fase3
  	digitalWrite(29,LOW);
  	digitalWrite(23,HIGH);
  	digitalWrite(33,HIGH);
  		delay(cp);
  
	digitalWrite(31,HIGH);//fase 4
  	digitalWrite(33,LOW);
    	delay(2000);}

//BLOCO2: funcionamento padrão do semaforo(nenhum carro)
  else if(v3 > t & v4 > t) {
    
		Serial.println("bloco2");
    	Serial.print("BT = ");
      		bt = s[8];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
	digitalWrite(23,LOW);//fase 1
  	digitalWrite(31,LOW);
  	digitalWrite(29,HIGH);
  	digitalWrite(27,HIGH);
  		delay(cp);
  
  	digitalWrite(27,LOW);//fase2
  	digitalWrite(25,HIGH);
  		delay(2000);
  
  	digitalWrite(25,LOW);//fase3
  	digitalWrite(29,LOW);
  	digitalWrite(23,HIGH);
  	digitalWrite(33,HIGH);
  		delay(cp);
  
	digitalWrite(31,HIGH);//fase 4
  	digitalWrite(33,LOW);
    	delay(2000);}
  
//BLOCO3: v1 maior que v2(carro na rua 1 e rua 2 vazia)
  else if(v3 < t & v4 > t) {
    
		Serial.println("bloco3");
    	Serial.print("BT = ");
      		bt = s[9];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(25, LOW);
    digitalWrite(23, LOW);
    digitalWrite(33, LOW);
    digitalWrite(31, LOW);
    
  	digitalWrite(27, HIGH);
  	digitalWrite(29, HIGH);
  		delay(pp); }
  
//BLOCO4: v2 maior que v1(carro na rua 2 e rua 1 vazia)
  else if(v3 < t & v4 > t) {
    
		Serial.println("bloco4");
    	Serial.print("BT = ");
      		bt = s[10];
      	Serial.println(bt);
        Serial.println("//--------------------//--------------------//");
    
    digitalWrite(27, LOW);
    digitalWrite(25, LOW);
    digitalWrite(31, LOW);
    digitalWrite(29, LOW);
    
  	digitalWrite(33, HIGH);
  	digitalWrite(23, HIGH);
  		delay(pp); }
}
//Nicolas Campos Marceniuk/Thunderer
